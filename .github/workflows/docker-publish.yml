name: Build and Push Docker Image

# Trigger the workflow on pushes to the main branch and on version tags
on:
  push:
    branches:
      - main
    tags:
      - 'v*.*.*'  # e.g., v1.0.0

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    env:
      IMAGE_NAME: antonygiomarx/ollama-llama3.3  # Your Docker Hub repository
      VERSION: v${{ github.run_number }}        # Auto-incremented version based on run number

    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Step 3: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      # Step 4: Build the Docker image
      - name: Build Docker image
        uses: docker/build-push-action@v4
        with:
          context: .                                # Context of the build
          push: false                               # Push happens in the next step
          tags: ${{ env.IMAGE_NAME }}:${{ env.VERSION }}  # Tag the image with version

      # Step 5: Push the Docker image to Docker Hub
      - name: Push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:${{ env.VERSION }}
            ${{ env.IMAGE_NAME }}:latest             # Also tag as latest

      # (Optional) Step 6: Create a GitHub Release (if pushing on tag)
      - name: Create GitHub Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
